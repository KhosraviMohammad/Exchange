version: '1'

services:
  Exchange:
    image: django-exchange:1.0.2
    depends_on:
      - postgres
    working_dir: /Exchange
    volumes:
      - ./:/Exchange
    environment:
      'ENGINE': django.db.backends.postgresql
      'NAME': test
      'USER': postgres
      'PASSWORD': amir
      'HOST': postgres
      'PORT': 5432
      'RABBITMQ_USER': guest
      'RABBITMQ_PASSWORD': guest
      'RABBITMQ_HOST': rabbitmq
      'RABBITMQ_PORT': 5672
      'DEBUG': True
      'SECRET_KEY': asldmasfnfindsoijeqoj213j2djiai8u32798ryhwwhc7934y
      'ALLOWED_HOSTS': "*"
    networks:
      exchangeNet:
        aliases:
          - exchange
    command:
#      bash -c "source dockervenv/bin/activate && pip install -r req.txt && python manage.py migrate
#      && gunicorn --workers=1 -b 0.0.0.0:8000 'Exchange.wsgi:application'"
      bash -c "pip install -r req.txt && python manage.py migrate &&
      gunicorn --workers=1 -b 0.0.0.0:8000 'Exchange.wsgi:application'"

  postgres:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      'POSTGRES_USER': postgres
      'POSTGRES_PASSWORD': amir
    networks:
      exchangeNet:
        aliases:
          - postgres
  rabbitmq:
    image: rabbitmq
    networks:
      exchangeNet:
        aliases:
          - rabbitmq
  nginx:
    image: exchange-nginx
    ports:
      - 80:80
    volumes:
      - ./static:/var/www/ExchangeStatics
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      exchangeNet:
        aliases:
          - nginx
networks:
  exchangeNet:
    driver: bridge
volumes:
  postgres: