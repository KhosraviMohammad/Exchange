worker_processes 1;

user nobody nogroup;
# 'user nobody nobody;' for systems with 'nobody' as a group instead
error_log  /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;


events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  # 'use epoll;' to enable for Linux 2.6+
  # 'use kqueue;' to enable for FreeBSD, OSX
}



http {
    include /etc/nginx/mime.types;
    access_log /var/log/nginx/access.log combined;

    upstream django_server {
      # ip_hash
      # least_conn;
      server exchange:8000;
    }

    server {
      listen 6040;



      # -------------------
      #rewrite  ^/static/(.*) /ExchangeStatics/$1;

      #location /ExchangeStatics/ {
      #  root /var/www;
      #
      #  try_files $uri $uri/ @friendly_404;
      #}
      # -------------------


      set $static "";
      if ($uri ~* "/static/(.*)") {
          set $static "/$1";
      }

      location ~* /static/ {
        root /var/www/ExchangeStatics/;

        try_files $static $uri/ @friendly_404;
      }

      #location / {
      #return 200 "Sorry, that file could not be found. $uri\n $static";
      #}

      location / {
        proxy_set_header Host $host;
        proxy_pass http://django_server;
      }

      location @friendly_404 {
        return 404 "Sorry, that file could not be found. $uri\n $static";
      }
    }
}
